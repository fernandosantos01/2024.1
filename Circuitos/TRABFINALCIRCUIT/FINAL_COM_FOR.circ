<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="2.0"/>
    <comp lib="0" loc="(190,240)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(190,260)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(190,280)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="3"/>
    </comp>
    <comp lib="0" loc="(410,240)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp loc="(410,240)" name="ALU">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
  </circuit>
  <vhdl name="ALU">library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity ALU is
    Port (
        A, B: in std_logic_vector(3 downto 0); -- Operandos de 4 bits
        opcode: in std_logic_vector(2 downto 0); -- Código de operação de 3 bits
        result: out std_logic_vector(3 downto 0) -- Resultado de 4 bits
        );
end ALU;

architecture Behavioral of ALU is
begin
    process(A, B, Opcode)
    begin
        case Opcode is
            when "000" =&gt; -- Soma
                Result &lt;= std_logic_vector(unsigned(A) + unsigned(B));
            when "001" =&gt; -- Subtração
                Result &lt;= std_logic_vector(unsigned(A) - unsigned(B));
            when "010" =&gt; -- AND
                Result &lt;= A and B;
            when "011" =&gt; -- OR
                Result &lt;= A or B;
            when "100" =&gt; -- NOT
                Result &lt;= not A;
            when "101" =&gt; -- Deslocamento à esquerda
    			for i in 0 to 2 loop
        			Result(i) &lt;= A(i+1);
    			end loop;
    			Result(3) &lt;= '0';
		  when "110" =&gt; -- Deslocamento à direita
    			for i in 1 to 3 loop
        			Result(i) &lt;= A(i-1);
    			end loop;
    			Result(0) &lt;= '0';

            when others =&gt;
                Result &lt;= (others =&gt; '0');
        end case;
    end process;
end Behavioral;
</vhdl>
</project>
